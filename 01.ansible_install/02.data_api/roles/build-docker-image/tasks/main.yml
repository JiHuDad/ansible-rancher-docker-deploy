
- name: Create data-api unzipped directory
  file:
    path: "{{ docker_home }}/{ docker.tar_dir }}"
    state: directory

- name: Unarchive the data-api zip file fetched from ftp server
  unarchive:
    src: "{{ftp_server}}{{data_api.ftp_filename}}"
    dest: "{{docker.tar_dir}}"
    remote_src: True


- name: Replace the hostname of MariaDB server to container name "mariadb-test" in configuration file
  shell: sed -i "s/jdbc:mariadb:\/\/dataplatform16/jdbc:mariadb:\/\/mariadb-test/g;s/jdbc:mysql:\/\/dataplatform16\.skcc\.com/jdbc:mysql:\/\/mariadb-test/g;s/jdbc:mysql:\/\/dataplatform04/jdbc:mariadb:\/\/mariadb-test/g" {{ item }}
  args:
      chdir: "{{ data_api.ftp_unzip_dir }}/conf"
  ignore_errors: True
  with_items: '{{ data_api.conf_file }}'


- name: Copy Dockerfile(data-api) to unzipped directory of data-api application
  copy:
    src: "data/dockerfile/Dockerfile"
    dest: "{{ data_api.ftp_unzip_dir }}"


- name: Build image using Dockerfile for data-api
  docker_image:
    path: '{{ data_api.ftp_unzip_dir }}'
    name: '{{ data_api.container_name }}'
#    dockerfile: "{{data_api.unzip_dir}}/Dockerfile_data-api"


- name: Save docker image to archive file
  docker_image:
    name: '{{ data_api.container_name }}'
    tag: v1
    archive_path: "{{ docker.image_dir }}/{{ docker.image_save_file }}"

- name: Send arhived image file to rancher host
  shell: "scp {{ docker.image_dir }}/{{ docker.image_save_file }} rts@{{ hostvars[item]['ansible_ssh_host'] }}:{{ docker.image_dir }}/{{ docker.image_save_file }}"
  with_inventory_hostnames:
    - Agents


- name: Load data-api image from archive
  docker_image:
    name: '{{ data_api.container_name }}'
    load_path: "{{ docker.image_dir }}/{{ docker.image_save_file }}"


# - debug:
#     msg: "{{ hostvars[item]['ansible_ssh_host'] }}"
#   with_inventory_hostnames:
#     - Agents
